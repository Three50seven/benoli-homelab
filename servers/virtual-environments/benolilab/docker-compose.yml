name: benolilab-docker
secrets:
    plex_claim:
        file: ./secrets/.plex_claim
    watchtower_discord_hook:
        file: ./secrets/.watchtower_discord_hook
    volume_backup_nas_ip:
        file: ./secrets/.volume_backup_nas_ip
    volume_backup_nas_user:
        file: ./secrets/.volume_backup_nas_user
    volume_backup_nas_pw:
        file: ./secrets/.volume_backup_nas_pw
services:
    portainer:
        container_name: "portainer"
        image: "portainer/portainer-ce:alpine"
        networks:
          server_net:
            ipv4_address: 172.18.0.10
        ports:
          - "9443:9443/tcp"
        restart: always
        volumes:
          - "/var/run/docker.sock:/var/run/docker.sock"
          - "portainer_data:/data"
        healthcheck:
              test: ["CMD-SHELL", "wget --no-check-certificate --spider -q https://localhost:9443/api/status || exit 1"]
              interval: 1m30s
              timeout: 30s
              retries: 5
        labels:
            - com.centurylinklabs.watchtower.enable=true 
    watchtower:
        container_name: watchtower
        image: containrrr/watchtower
        networks:
          server_net:
            ipv4_address: 172.18.0.11
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        restart: unless-stopped
        environment:
            WATCHTOWER_CLEANUP: true
            WATCHTOWER_DEBUG: true
            WATCHTOWER_ROLLING_RESTART: true
            WATCHTOWER_LABEL_ENABLE: true
            WATCHTOWER_SCHEDULE: 0 0 9 * * 5
            WATCHTOWER_NOTIFICATION_REPORT: true
            WATCHTOWER_NOTIFICATION_URL: /run/secrets/watchtower_discord_hook
            WATCHTOWER_NOTIFICATION_TEMPLATE: |
                {{- if .Report -}}
                    {{- with .Report -}}
                {{len .Scanned}} Scanned, {{len .Updated}} Updated, {{len .Failed}} Failed
                    {{- range .Updated}}
                - {{.Name}} ({{.ImageName}}): {{.CurrentImageID.ShortID}} updated to {{.LatestImageID.ShortID}}
                    {{- end -}}
                    {{- range .Fresh}}
                - {{.Name}} ({{.ImageName}}): {{.State}}
                    {{- end -}}
                    {{- range .Skipped}}
                - {{.Name}} ({{.ImageName}}): {{.State}}: {{.Error}}
                    {{- end -}}
                    {{- range .Failed}}
                - {{.Name}} ({{.ImageName}}): {{.State}}: {{.Error}}
                    {{- end -}}
                    {{- end -}}
                {{- else -}}
                    {{range .Entries -}}{{.Message}}{{"\n"}}{{- end -}}
                {{- end -}}
        secrets:
            - watchtower_discord_hook
        healthcheck:
              test: ["CMD", "/watchtower", "--health-check"]
              interval: 1m30s
              timeout: 10s
              retries: 3
              start_period: 40s
        labels:
            - com.centurylinklabs.watchtower.enable=true    
    uptime-kuma:
        container_name: uptime-kuma
        image: louislam/uptime-kuma:1
        networks:
          server_net:
            ipv4_address: 172.18.0.12
        volumes:
            - uptime_kuma_data:/app/data
            - /var/run/docker.sock:/var/run/docker.sock
        ports:
            # <Host Port>:<Container Port>
            - 3001:3001
        restart: unless-stopped
        healthcheck:
            test: "curl --connect-timeout 15 --max-time 100 --silent --show-error --fail 'http://localhost:3001/dashboard'"
            interval: 1m
            timeout: 15s
            retries: 3
            start_period: 1m
        labels:
            - com.centurylinklabs.watchtower.enable=true 
    plex:
        container_name: plex
        image: linuxserver/plex
        networks:
          server_net:
            ipv4_address: 172.18.0.13
        ports:
            - "32400:32400/tcp"
        restart: unless-stopped
        environment:
            - TZ=America/New_York
            #GET CLAIM FROM https://www.plex.tv/claim/
            - PLEX_CLAIM=/run/secrets/plex_claim
            - PUID=1000
            - PGID=1000
        volumes:
            - plex_server_config:/config
            - plex_server_transcode:/transcode
            - plex_server_media:/data
            - /mnt/naspool:/naspool
            - /mnt/sdb:/localmedia
        devices:
            - /dev/bus/usb:/dev/bus/usb	
            - /dev/dvb:/dev/dvb
        healthcheck:
              test: "curl --connect-timeout 15 --max-time 100 --silent --show-error --fail 'http://localhost:32400/identity' >/dev/null"
              interval: 1m
              timeout: 15s
              retries: 3
              start_period: 1m
        secrets:
            - plex_claim
        labels:
            - com.centurylinklabs.watchtower.enable=true 
    volumes_backup:
        container_name: "docker-volume-backup"
        image: offen/docker-volume-backup:latest
        networks:
          server_net:
            ipv4_address: 172.18.0.14
        environment:
            BACKUP_FILENAME: backup-%Y-%m-%dT%H-%M-%S.tar.gz
            BACKUP_PRUNING_PREFIX: backup-
            BACKUP_RETENTION_DAYS: 5
            BACKUP_CRON_EXPRESSION: 0 10 * * *
            SSH_HOST_NAME: ${NAS_IP_ADDRESS}
            SSH_PORT: 22
            SSH_USER: /run/secrets/volume_backup_nas_user
            SSH_PASSWORD: /run/secrets/volume_backup_nas_pw
            SSH_REMOTE_PATH: /naspool/backups/benolilab-docker/container-volumes
        volumes:
            - /etc/timezone:/etc/timezone:ro
            - /etc/localtime:/etc/localtime:ro
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - plex_server_config:/backup/plex_server_config:ro
            - plex_server_transcode:/backup/plex_server_transcode:ro
            - plex_server_media:/backup/plex_server_media:ro
            - portainer_data:/backup/portainer_data:ro
            - uptime_kuma_data:/backup/uptime_kuma_data:ro
            - nginx_proxy_config:/backup/nginx_proxy_config:ro
            - nginx_proxy_data:/backup/nginx_proxy_data:ro
            - nginx_proxy_letsencrypt:/backup/nginx_proxy_letsencrypt:ro
            - adguard_work:/backup/adguard_work:ro
            - adguard_conf:/backup/adguard_conf:ro
        restart: unless-stopped
        secrets:
            - volume_backup_nas_ip
            - volume_backup_nas_user
            - volume_backup_nas_pw
        labels:
            - com.centurylinklabs.watchtower.enable=true 
        healthcheck:
            test: "exit 0"
            interval: 60s
            timeout: 5s
            retries: 3
            start_period: 10s
    nginx_proxy:
        container_name: "nginx_proxy"
        environment:
          - "DB_SQLITE_FILE=/config/database.sqlite"
          - "DISABLE_IPV6=true"
        image: "jc21/nginx-proxy-manager:latest"
        networks:
          server_net:
            ipv4_address: 172.18.0.254
        ports:
           - '80:80'
           - '443:443'
           - '81:81'
           - '853:853'
        restart: "unless-stopped"
        volumes:
          - "nginx_proxy_config:/config"
          - "nginx_proxy_letsencrypt:/etc/letsencrypt"
          - "nginx_proxy_data:/data"
        labels:
            - com.centurylinklabs.watchtower.enable=true 
        healthcheck:
          test: ["CMD", "/bin/check-health"]
          interval: 10s
          timeout: 3s
    adguardhome:
        container_name: adguardhome
        image: adguard/adguardhome
        networks:
          server_net:
            ipv4_address: 172.18.0.253
        volumes:
          - adguard_work:/opt/adguardhome/work
          - adguard_conf:/opt/adguardhome/conf
        ports:
          - "53:53/tcp"
          - "53:53/udp"
          - "67:67/udp"
          - "68:68/udp"
          - "8080:80/tcp"
          - "4443:443/tcp"
          - "8853:853/tcp"
          - "3000:3000/tcp"
        restart: unless-stopped
        labels:
            - com.centurylinklabs.watchtower.enable=true
        healthcheck:
            test: ["CMD-SHELL", "wget --spider -q http://localhost:3000 || exit 1"]
            interval: 10s
            timeout: 30s
            retries: 3
volumes:
    portainer_data:
        name: portainer_data
    nginx_proxy_config:
        name: nginx_proxy_config
    nginx_proxy_letsencrypt:
        name: nginx_proxy_letsencrypt
    nginx_proxy_data:
        name: nginx_proxy_data
    adguard_work:
        name: adguard_work
    adguard_conf:
        name: adguard_conf
    uptime_kuma_data:
        name: uptime_kuma_data
    plex_server_config:
        name: plex_server_config
    plex_server_transcode:
        name: plex_server_transcode
    plex_server_media:
        name: plex_server_media
networks:
    server_net:
        name: server_net
        driver: bridge
        ipam:
            config:
                - subnet: 172.18.0.0/16
                  gateway: 172.18.0.1
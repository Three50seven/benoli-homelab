name: benolilab-docker
secrets:
    plex_claim:
        file: ./secrets/.plex_claim    
    certgen_notifications_discord_hook_url:
        file: ./secrets/.certgen_notifications_discord_hook_url
x-logging: &default-logging
  driver: json-file
  options:
    max-size: "10m"
    max-file: "3"
services:   
    plex:
        container_name: plex
        image: linuxserver/plex
        logging: *default-logging
        networks:
          server_net:
            ipv4_address: 172.18.0.13
        ports:
            - "32400:32400/tcp"
        restart: unless-stopped
        environment:
            - TZ=America/New_York
            #GET CLAIM FROM https://www.plex.tv/claim/
            - PLEX_CLAIM=/run/secrets/plex_claim
            - PUID=1000
            - PGID=1000
        volumes:
            - plex_server_config:/config
            - plex_server_transcode:/transcode
            - plex_server_media:/data
            - /mnt/naspool:/naspool
            - /mnt/sdb:/localmedia
        devices:
            - /dev/bus/usb:/dev/bus/usb	
            - /dev/dvb:/dev/dvb
        healthcheck:
              test: "curl --connect-timeout 15 --max-time 100 --silent --show-error --fail 'http://localhost:32400/identity' >/dev/null"
              interval: 1m
              timeout: 15s
              retries: 3
              start_period: 1m
        secrets:
            - plex_claim
        labels:
            description: "Plex organizes video, music and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices."
            com.centurylinklabs.watchtower.enable: "true"
            docker-volume-backup.stop-during-backup: "true"
    adguardhome:
        container_name: adguardhome
        image: adguard/adguardhome
        logging: *default-logging
        networks:
          server_net:
            ipv4_address: 172.18.0.253
        volumes:
          - adguard_work:/opt/adguardhome/work
          - adguard_conf:/opt/adguardhome/conf
        ports:
          - "53:53/tcp"
          - "53:53/udp"
          - "67:67/udp"
          - "68:68/udp"
          - "8080:80/tcp"
          - "4443:443/tcp"
          - "8853:853/tcp"
          - "3000:3000/tcp"
        restart: unless-stopped
        labels:
            description: "AdGuard Home is a network-wide ad and tracker blocker that can be deployed using Docker."
            com.centurylinklabs.watchtower.enable: "true"
        healthcheck:
            test: ["CMD-SHELL", "wget --spider -q http://localhost:3000 || exit 1"]
            interval: 10s
            timeout: 30s
            retries: 3
    nginx-proxy:
        container_name: nginx-proxy
        image: "jc21/nginx-proxy-manager:latest"
        logging: *default-logging
        networks:
          server_net:
            ipv4_address: 172.18.0.254
        environment:
          - "DB_SQLITE_FILE=/config/database.sqlite"
        ports:
           - '80:80'
           - '443:443'
           - '81:81'
           - '853:853'
        restart: "unless-stopped"
        volumes:
          - "nginx_proxy_config:/config"
          - "nginx_proxy_letsencrypt:/etc/letsencrypt"
          - "nginx_proxy_data:/data"
          - ./selfsigned-certgen/certs:/mnt/certs:ro
        labels:
            description: "Nginx, pronounced 'engine-x,' is a versatile open-source software that acts as a web server, reverse proxy, load balancer, and more."
            com.centurylinklabs.watchtower.enable: "true"
            docker-volume-backup.stop-during-backup: "true"
        healthcheck:
          test: ["CMD", "/bin/check-health"]
          interval: 10s
          timeout: 3s    
    selfsigned-certgen:
        build: ./selfsigned-certgen
        container_name: selfsigned-certgen
        volumes:
            - ./selfsigned-certgen/certs:/certs
            - ./selfsigned-certgen/archive:/archive    
        logging: *default-logging
        networks:
          server_net:
            ipv4_address: 172.18.0.25
        env_file:
            - ./selfsigned-certgen/selfsigned-certgen.env
        environment:
            DRY_RUN: false
            DISABLE_CRON: false
        secrets:
            - certgen_notifications_discord_hook_url
        restart: unless-stopped
        labels:
            description: "Custom container for running the selfsigned-certgen script to generate a SSL certificate authority and self-sign a homelab cert to be used by NPM and other services that may need it."
            # com.docker.backup.restart-policy: {{match-to-docker-compose-restart-policy-value}} # Add this label to containers to store the original docker compose restart policy for applying back to the container after it is restarted after backups
        healthcheck:
          test: ["CMD-SHELL", "/app/scripts/healthcheck.sh"]
          interval: 60s
          timeout: 5s
          retries: 3
          start_period: 10s
volumes:
    nginx_proxy_config:
        name: nginx_proxy_config
    nginx_proxy_letsencrypt:
        name: nginx_proxy_letsencrypt
    nginx_proxy_data:
        name: nginx_proxy_data
    adguard_work:
        name: adguard_work
    adguard_conf:
        name: adguard_conf    
    plex_server_config:
        name: plex_server_config
    plex_server_transcode:
        name: plex_server_transcode
    plex_server_media:
        name: plex_server_media
networks:
    server_net:
        name: server_net
        driver: bridge
        ipam:
            config:
                - subnet: 172.18.0.0/16
                  gateway: 172.18.0.1
# Backup configuration settings

# Set the IS_TEST variable to true to run a test only 
# When false, the ZFS commands will be executed. i.e. a snapshot will be made and sent to the backup pool, and old ones will be destroyed
# Note: This will get converted to boolean in the script, it must be set exclusively to "false" in order to run in "LIVE" mode
IS_TEST_STRING="true" # Safety flag for running just a test without impacting the ZFS pools

# Source pool (replace with your primary pool name) - this is the one that will get a snapshot taken and sent to the backup pool
# Note: The BACKUP_POOL will be determined by what backup pool is active at the time of running the script; it will be searched via $(zpool list -H -o name | grep -m1 "naspool_backup")
#	If multiple backup pools are active, only the first one found will be chosen to receive the snapshot from the SOURCE_POOL
SOURCE_POOL="naspool"

# Source and backup pools (space-separated list) - # List all pools including those in backup rotation
# These are primarily used in the snapshot history logs and cleanup checks, to ensure a snapshot has been sent before deleting it.
REQUIRED_POOLS=("naspool" "naspool_backup1" "naspool_backup2")

MAX_RETENTION_PERIODS=50 # Adjust accordingly, but 50 seems like enough

# Threshold settings (in GB)
# Minimum required free space in GB
# Send a warning if below warning threshold
BACKUP_POOL_SIZE_WARNING_THRESHOLD=500
SOURCE_POOL_SIZE_WARNING_THRESHOLD=500
# Stop backup if below critical threshold
BACKUP_POOL_CRITICAL_THRESHOLD=100  
SOURCE_POOL_CRITICAL_THRESHOLD=100

# Log file paths
LOG_FILE="/var/log/zfs_backup.log"
DISK_USAGE_LOG="/var/log/zfs_disk_usage.log"
SNAPSHOT_TRANSFER_HISTORY_LOG="/var/log/zfs_snapshot_transfers.log"

# Make sure the Discord webhook is created and the path etc. is stored here:
# Formate of Webhook: https://discord.com/api/webhooks/[WEBHOOK_ID]/[UNIQUE_CODE]
# [RELATIVE TO zfs_backup.sh SCRIPT DIRECTORY]/secrets/.zfs_backups_discord_webhook"